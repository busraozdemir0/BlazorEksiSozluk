@if (EntryComment != null)
{
    <div class="card border-0">

        <div class="card-body col-md-12">

            <p class="entry-content">@EntryComment.Content</p>


            <EntryFooterRateFavoriteComponent EntryId="@EntryComment.Id"
                                              OnFavClicked="@OnFavClicked"
                                              OnVoteClicked="@OnVoteClicked"
                                              Vote="@EntryComment.VoteType"
                                              FavoritedCount="@EntryComment.FavoritedCount"
                                              IsFavorited="@EntryComment.IsFavorited" />


            @* EntryComment'nin altinda kullanicinin adi ve Entry'i olusturma tarihi cikacak *@
            <EntryFooterAuthorComponent UserName="@EntryComment.CreatedByUserName"
                                        CreateDate="@EntryComment.CreatedDate" />

        </div>
    </div>
}

@code {
    [Parameter]
    public GetEntryCommentsViewModel EntryComment { get; set; } = new();

    [Inject]
    IVoteService voteService { get; set; }

    [Inject]
    IFavService favService { get; set; }

    private async Task OnFavClicked(FavClickedEventArgs args)
    {
        if (args.IsFaved)
        {
            await favService.CreateEntryCommentFav(args.EntryId.Value);
            EntryComment.IsFavorited = true; // favorilere eklendi mi bilgisini true yap
            EntryComment.FavoritedCount++; // Favorilere eklendikten sonra FavoritedCount alaninin bir artma islemi
        }
        else // Favorilerden kaldirilmasi islemi
        {
            await favService.DeleteEntryCommentFav(args.EntryId.Value);
            EntryComment.IsFavorited = false;
            EntryComment.FavoritedCount--;
        }

        // Bu componentin kendi bilgisini hemen aninda yenileyebilmesi icin bu metodu cagiriyoruz.
        StateHasChanged();

    }

    private async Task OnVoteClicked(VoteClickedEventArgs args)
    {
        if (args.UpVoteDeleted || args.DownVoteDeleted) // eger onceden up veya down islemine basilmissa burada up veya down'u kaldirma islemi
        {
            await voteService.DeleteEntryCommentVote(args.EntryId);
            EntryComment.VoteType = VoteType.None; // Up veya down islemi silindiyse bu Entry'nin VoteType'ini artik None yapiyoruz
            return;
        }

        if (args.IsUpVoteClicked) // Eger yukari ok tusuna basilarak UpVote verme islemi yapilacak
        {
           // await voteService.CreateEntryCommentUpVote(args.EntryId);
            EntryComment.VoteType = VoteType.UpVote;
            return;
        }

        if (args.IsDownVoteClicked) // Eger asagi ok tusuna basilarak DownVote verme islemi yapilacak
        {
            await voteService.CreateEntryCommentDownVote(args.EntryId);
            EntryComment.VoteType = VoteType.DownVote;
            return;
        }
    }
}
