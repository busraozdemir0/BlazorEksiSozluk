@page "/profile/{UserName}"
@page "/profile/{UserId:guid}"
@page "/me"

@* Eger giris yapan kullanici baska birinin profiline tiklarsa yalnizca o kisinin kullanici adi ve entry'leri gozukecek (yani progil bilgileri degistirme alani gelmeyecek) *@

@* Giris yapan kulanicinin bilgilerini guncelleyebilecegi alanin componenti *@
<UserProfileDetailComponent UserName="@UserName" UserId="@UserId" />

<br />

@* Profil sayfasinda giris yapan kullanicinin eklemis oldugu entry'ler gosteriliyor (sayfalama yapisi ile) *@
@if (entries is not null)
{
    foreach (var entry in entries.Results)
    {
        <EntryViewerComponent Entry="@entry" MyEntries="true" />
        <br />
    }

    <PaginationComponent TotalPage="@entries.PageInfo.TotalPageCount"
                         CurrentPage="@currentPage"
                         OnPageChanged="@OnPageChanged" />
}

@code {
    [Inject]
    IEntryService entryService { get; set; }

    PagedViewModel<GetEntryDetailViewModel> entries;

    [Parameter]
    public string UserName { get; set; }

    [Parameter]
    public Guid UserId { get; set; }

    private int currentPage = 1;

    public async Task OnPageChanged(int pageNumber)
    {
        entries = await entryService.GetProfilePageEntries(pageNumber, 20, UserName);
    }

    protected override async Task OnInitializedAsync() // Baslangicta acilacak sayfa currentPage degiskeni olacak ve her sayfada 20 adet veri gosterilecektir 
    {
        entries = await entryService.GetProfilePageEntries(currentPage, 20, UserName);
    }
}
