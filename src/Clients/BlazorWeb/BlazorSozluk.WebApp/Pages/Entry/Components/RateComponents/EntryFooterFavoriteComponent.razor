@using BlazorSozluk.WebApp.Infrastructure.Models
@if (identityService.IsLoggedIn) @* Login olunmus mu diye kontrol et (login olunmussa bu kisim gosterilecek) *@
{
    <span class="entry-fav @(IsFavorited ? "entry-faved" : "entry-not-faved") p-3">
        <span @onclick="(() => FavoritedClicked())">
            @FavoritedCount
        </span>

    </span>
}

@* identityService yerine alternatfi olarak AuthorizeView attribute'unu da kullanabiliriz' *@


@code {
    [Inject]
    IIdentityService identityService { get; set; }

    [Parameter]
    public bool IsFavorited { get; set; }

    [Parameter]
    public Guid? EntryId { get; set; } // Hangi entry'e ait oldugu bilgisi

    [Parameter]
    public int FavoritedCount { get; set; } // Kac kez favorilere eklenmis oldugu bilgisi

    [Parameter]
    public EventCallback<FavClickedEventArgs> OnFavClicked { get; set; }

    public async Task FavoritedClicked()
    {
        IsFavorited = !IsFavorited;

        var eventArgs = new FavClickedEventArgs();
        eventArgs.EntryId = EntryId;
        eventArgs.IsFaved = IsFavorited;

        await OnFavClicked.InvokeAsync(eventArgs);

        // Bir seyin ici dolacagi icin yani eger favoriye eklenmisse farkli, eklenmemisse farkli bir simge gozukeceginden
        //+ durumu degiseceginden StateHasChanged metodunu kullanmaliyiz.
        StateHasChanged();
    }


}
